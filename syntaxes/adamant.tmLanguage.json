{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Adamant",
    "patterns": [{
            "include": "#keywords"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#modifiers"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#constants"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [{
                    "name": "keyword.control.adamant",
                    "match": "\\b(if|else|match|loop|while|for|in|break|continue|return)\\b"
                },
                {
                    "name": "keyword.other.adamant",
                    "match": "\\b(let|var)\\b"
                },
                {
                    "name": "keyword.type.adamant",
                    "match": "\\b(void)\\b"
                },
                {
                    "name": "keyword.type.adamant",
                    "match": "\\b(bool|code_point|string|u?int\\d*|float\\d*|u?fixed\\d+\\.\\d+|decimal\\d*|size|offset|void)\\b"
                }
            ]
        },
        "operators": {
            "patterns": [{
                "name": "keyword.operator.assignment.adamant",
                "match": "="
            }]
        },
        "strings": {
            "name": "string.quoted.double.adamant",
            "begin": "\"",
            "end": "\"",
            "patterns": [{
                "name": "constant.character.escape.adamant",
                "match": "\\\\."
            }]
        },
        "modifiers": {
            "patterns": [{
                "name": "storage.modifier.visibility.adamant",
                "match": "\\b(public|protected|internal|private)\\b"
            }]
        },
        "punctuation": {
            "patterns": [{
                "name": "punctuation.parenthesis.open.adamat",
                "match": "\\("
            }]
        },
        "comments": {
            "patterns": [{
                    "name": "comment.block.cs",
                    "begin": "/\\*",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.cs"
                        }
                    },
                    "end": "\\*/",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.cs"
                        }
                    }
                },
                {
                    "name": "comment.line.double-slash.cs",
                    "begin": "(?<!/)//(?!/)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.adamant"
                        }
                    },
                    "end": "(?=$)"
                }
            ]
        },
        "constants": {
            "patterns": [{
                "name": "constant.language.none.adamant",
                "match": "\\b(none )\\b"
            }]
        }
    },
    "scopeName": "source.adamant"
}
